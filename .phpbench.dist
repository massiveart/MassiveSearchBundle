<?php

require(__DIR__ . '/vendor/symfony-cmf/testing/bootstrap/bootstrap.php');

$config = new PhpBench\Configuration();
$config->setPath(__DIR__ . '/Tests/Benchmark');
$config->addReport(array(
    'title' => 'Indexing Overview',
    'description' => <<<EOT
This benchmark compares the Test adapter, which is a dummy adapter which uses an array for storage, against
the Elastic Search and Zend Lucene adapters
EOT
    ,
    'name' => 'console_table',
    'groups' => array('index'),
    'aggregate' => 'subject',
    'cols' => array('class', 'iters', 'mean_time', 'deviation_min'),
    'sort' => 'time',
));

$config->addReport(array(
    'title' => 'Indexing Scaling',
    'description' => <<<EOT
Compares how indexing data scales on the different adapters. Note the `test_adapter` is a dummy array implementation.
EOT
    ,
    'name' => 'console_table',
    'groups' => array('index'),
    'aggregate' => 'run',
    'cols' => array('params', 'iters', 'mean_time', 'deviation_min'),
    'sort' => 'time',
));

$config->addReport(array(
    'title' => 'Searching Overview',
    'description' => <<<EOT
Compares search performance
EOT
    ,
    'name' => 'console_table',
    'groups' => array('search'),
    'aggregate' => 'subject',
    'cols' => array('class', 'iters', 'mean_time', 'deviation_min'),
    'sort' => 'time',
));

$config->addReport(array(
    'title' => 'Search detailed',
    'description' => <<<EOT
Compares search performance
EOT
    ,
    'name' => 'console_table',
    'groups' => array('search'),
    'aggregate' => 'run',
    'cols' => array('params', 'iters', 'mean_time', 'deviation_min'),
    'sort' => 'params',
));

return $config;
